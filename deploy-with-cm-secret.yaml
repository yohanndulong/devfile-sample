kind: Deployment
apiVersion: apps/v1
metadata:
  name: my-nodejs
  annotations:
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"nodejs-example:latest"},"fieldPath":"spec.template.spec.containers[0].image"}]'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs-app
  template:
    metadata:
      labels:
        app: nodejs-app
    spec:
      containers:
        - name: my-nodejs
          image: image-registry.openshift-image-registry.svc:5000/yohann-dulong-dev/nodejs-example
          env:
          - name: SECRET_ENVVAR
            valueFrom:
              secretKeyRef:
                name: nodejs-secret
                key: password
          - name: CONFIGMAP_ENVVAR
            valueFrom:
              configMapKeyRef:
                name: nodejs-config
                key: username
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP

          volumeMounts:
          - name: config
            mountPath: /etc/config.txt
            subPath: exemple.properties
          resources:
            requests:
              memory: "50Mi"
              cpu: "10m"
            limits:
              memory: "100Mi"
              cpu: "500m"
      readOnly: true   
      volumes:
      - name: config
        configMap:
          name: nodejs-config
    triggers:
    - type: ConfigChange 
    - imageChangeParams:
        automatic: true
        containerNames:
        - nodejs-example
        from:
          kind: ImageStreamTag
          name: nodejs-example:latest
      type: ImageChange  
    strategy:
      type: Rolling      
---
kind: Service
apiVersion: v1
metadata:
  name: my-nodejs-svc
spec:
  ports:
    - name: http-3001
      port: 3001
      protocol: TCP
      targetPort: 3001
  selector:
    app: nodejs-app
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: nodejs-example
  annotations:
    openshift.io/host.generated: 'true'
spec:
  to:
    kind: Service
    name: my-nodejs-svc
    weight: 100
  port:
    targetPort: http-3001
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nodejs-config
data:
  username: "YOHANN"
  exemple.properties: |
   exemple=toto
   exemple2=titi 
---
apiVersion: v1
kind: Secret
metadata:
  name: nodejs-secret
data:
  password:  bGUgbW90IGRlIHBhc3Nl